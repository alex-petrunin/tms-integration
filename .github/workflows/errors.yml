name: Universal Test Integration

on:
  workflow_dispatch:
    inputs:
      triggerSource:
        description: "Source of trigger"
        required: false
        default: "automated_test_run"
      testCaseId:
        description: "Test Case ID"
        required: true
      testRunId:
        description: "Test Run ID"
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Your actual test execution - replace with any test framework
      - name: Execute Tests
        id: test_execution
        run: |
          # This is where you put your actual test command
          # Examples: npm test, pytest, mvn test, go test, etc.
          npm test

      # Universal notification step - works with any CI/CD and test framework
      - name: Report Test Results to YouTrack TMS
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üìã Reporting test results to YouTrack TMS...');
            
            // Collect native CI/CD information (GitHub Actions specific)
            const cicdContext = {
              platform: 'github-actions',
              repository: process.env.GITHUB_REPOSITORY,
              runId: process.env.GITHUB_RUN_ID,
              runUrl: `https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`,
              workflow: {
                name: '${{ github.workflow }}',
                runNumber: ${{ github.run_number }},
                runAttempt: ${{ github.run_attempt }},
                ref: '${{ github.ref }}',
                sha: '${{ github.sha }}',
                actor: '${{ github.actor }}',
                eventName: '${{ github.event_name }}'
              },
              job: {
                name: '${{ github.job }}',
                status: '${{ job.status }}',
                conclusion: '${{ job.conclusion }}'
              },
              runner: {
                os: '${{ runner.os }}',
                arch: '${{ runner.arch }}',
                name: '${{ runner.name }}'
              },
              timestamp: new Date().toISOString()
            };
            
            // Collect test step information
            const testStepInfo = {
              stepName: 'Execute Tests',
              outcome: '${{ steps.test_execution.outcome }}',
              conclusion: '${{ steps.test_execution.conclusion }}'
            };
            
            // Determine overall test result from native CI/CD data
            const testPassed = testStepInfo.outcome === 'success';
            const testStatus = testPassed ? 'passed' : 'failed';
            
            // Build universal test result payload
            const testResultPayload = {
              // YouTrack TMS specific fields
              triggerSource: '${{ github.event.inputs.triggerSource }}',
              testCaseId: '${{ github.event.inputs.testCaseId }}',
              testRunId: '${{ github.event.inputs.testRunId }}',
              
              // Universal test result information
              testResult: {
                status: testStatus,
                passed: testPassed,
                timestamp: cicdContext.timestamp,
                executionTime: null, // Could be calculated if needed
                
                // Native CI/CD context (platform agnostic structure)
                cicdContext: cicdContext,
                
                // Test execution details from native CI/CD
                execution: {
                  stepName: testStepInfo.stepName,
                  outcome: testStepInfo.outcome,
                  conclusion: testStepInfo.conclusion,
                  // Add any test framework specific results here if available
                  // e.g., junit results, coverage reports, etc.
                }
              }
            };
            
            console.log('üì¶ Universal test result payload:');
            console.log(JSON.stringify(testResultPayload, null, 2));
            
            // Send to YouTrack TMS webhook
            try {
              const response = await fetch(process.env.YOUTRACK_TMS_WEBHOOK_URL, {
                method: 'POST',
                headers: {
                  'Content-Type': 'application/json',
                  'Authorization': `Bearer ${process.env.YOUTRACK_TOKEN}`,
                  'X-CI-Platform': 'github-actions',
                  'X-Test-Framework': 'auto-detected' // Could be enhanced to detect framework
                },
                body: JSON.stringify(testResultPayload)
              });
              
              if (response.ok) {
                const responseData = await response.text();
                console.log('‚úÖ Successfully reported test results to YouTrack TMS');
                console.log('üìÑ Response:', responseData);
              } else {
                const errorData = await response.text();
                console.error(`‚ùå Failed to report test results: ${response.status} ${response.statusText}`);
                console.error('üìÑ Error details:', errorData);
                // Don't fail the workflow if reporting fails
              }
            } catch (error) {
              console.error('üí• Error reporting test results:', error.message);
              // Don't fail the workflow if reporting fails
            }
        env:
          YOUTRACK_TMS_WEBHOOK_URL: ${{ secrets.YOUTRACK_TMS_WEBHOOK_URL }}
          YOUTRACK_TOKEN: ${{ secrets.YOUTRACK_TOKEN }}
