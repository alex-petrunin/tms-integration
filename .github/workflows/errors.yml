name: Simple Failure Demo

on:
  workflow_dispatch:
    inputs:
      triggerSource:
        description: "Source of trigger"
        required: false
        default: "automated_test_run"
      testCaseId:
        description: "Test Case ID"
        required: true
      testRunId:
        description: "Test Run ID"
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run npm test (will fail)
        id: tests
        continue-on-error: true
        run: |
          echo "Running npm test..."
          if npm test > test_output.log 2>&1; then
            echo "test_status=success" >> $GITHUB_OUTPUT
            echo "error_output=" >> $GITHUB_OUTPUT
          else
            EXIT_CODE=$?
            echo "Tests failed with exit code $EXIT_CODE"
            echo "test_status=failure" >> $GITHUB_OUTPUT
            echo "error_output<<EOF" >> $GITHUB_OUTPUT
            cat test_output.log >> $GITHUB_OUTPUT
            echo "EOF" >> $GITHUB_OUTPUT
          fi

      - name: Report to YouTrack TMS
        if: always()
        uses: actions/github-script@v7
        env:
          CALLBACK_URL: ${{ secrets.WEBHOOK_URL }}
          YOUTRACK_TOKEN: ${{ secrets.YOUTRACK_TOKEN }}
          ERROR_OUTPUT: ${{ steps.tests.outputs.error_output }}
        with:
          script: |
            const testStatus = '${{ steps.tests.outputs.test_status }}';
            const errorOutput = process.env.ERROR_OUTPUT || '';
            const isSuccess = testStatus === 'success';

            const maxLen = 8000;
            const errorDetails = errorOutput.length > maxLen
            ? errorOutput.slice(0, maxLen) + '‚Ä¶[truncated]'
              : errorOutput;
    
            const payload = {
              repository: process.env.GITHUB_REPOSITORY,
              run_id: process.env.GITHUB_RUN_ID,
              status: isSuccess ? 'success' : 'failure',
              event: process.env.GITHUB_EVENT_NAME,
              triggerSource: '${{ github.event.inputs.triggerSource }}',
              testCaseId: '${{ github.event.inputs.testCaseId }}',
              testRunId: '${{ github.event.inputs.testRunId }}',
              timestamp: new Date().toISOString(),
              testResults: {
                errorDetails: errorDetails || (isSuccess ? '' : 'Test execution failed')
              },
              nativeGitHubData: {
                workflow: {
                  name: '${{ github.workflow }}',
                  runNumber: ${{ github.run_number }},
                  actor: '${{ github.actor }}'
                },
                job: {
                  status: '${{ job.status }}'
                },
                runner: {
                  os: '${{ runner.os }}',
                  arch: '${{ runner.arch }}'
                }
              }
            };

            console.log('üì¶ Sending to YouTrack TMS:', JSON.stringify(payload, null, 2));

            const res = await fetch(process.env.CALLBACK_URL, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.YOUTRACK_TOKEN}`
              },
              body: JSON.stringify(payload)
            });

            if (res.ok) {
              console.log('‚úÖ Successfully notified YouTrack TMS');
            } else {
              console.error(`‚ùå Failed to notify TMS: ${res.status} ${res.statusText}`);
              const text = await res.text();
              console.error(text);
            }
