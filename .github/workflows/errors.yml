name: Simple Real Test

on:
  workflow_dispatch:
    inputs:
      triggerSource:
        description: "Source of trigger"
        required: false
        default: "automated_test_run"
      testCaseId:
        description: "Test Case ID"
        required: true
      testRunId:
        description: "Test Run ID"
        required: true

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Run npm test (will fail without package.json)
        id: tests
        run: |
          echo "üß™ Running npm test..."
          npm test
          echo "‚úÖ Tests completed successfully"

      - name: Notify TMS on Success
        if: success()
        uses: actions/github-script@v7
        with:
          script: |
            console.log('‚úÖ Tests passed - notifying TMS...');
            
            const webhookPayload = {
              repository: process.env.GITHUB_REPOSITORY,
              run_id: process.env.GITHUB_RUN_ID,
              status: 'success',
              event: process.env.GITHUB_EVENT_NAME,
              triggerSource: '${{ github.event.inputs.triggerSource }}',
              testCaseId: '${{ github.event.inputs.testCaseId }}',
              testRunId: '${{ github.event.inputs.testRunId }}',
              timestamp: new Date().toISOString(),
              nativeGitHubData: {
                workflow: {
                  name: '${{ github.workflow }}',
                  runNumber: ${{ github.run_number }},
                  actor: '${{ github.actor }}'
                },
                job: {
                  status: '${{ job.status }}'
                },
                testStep: {
                  outcome: '${{ steps.tests.outcome }}',
                  conclusion: '${{ steps.tests.conclusion }}'
                }
              }
            };

            console.log('üì¶ Success payload:', JSON.stringify(webhookPayload, null, 2));

            const res = await fetch(process.env.CALLBACK_URL, {
              method: 'POST',
              headers: { 
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.YOUTRACK_TOKEN}`
              },
              body: JSON.stringify(webhookPayload)
            });
            
            if (res.ok) {
              console.log('‚úÖ TMS notified successfully');
            } else {
              console.error('‚ùå TMS notification failed:', res.status);
            }
        env:
          CALLBACK_URL: ${{ secrets.WEBHOOK_URL }}
          YOUTRACK_TOKEN: ${{ secrets.YOUTRACK_TOKEN }}

      - name: Notify TMS on Failure
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            console.log('‚ùå Tests failed - notifying TMS...');
            
            const webhookPayload = {
              repository: process.env.GITHUB_REPOSITORY,
              run_id: process.env.GITHUB_RUN_ID,
              status: 'failure',
              event: process.env.GITHUB_EVENT_NAME,
              triggerSource: '${{ github.event.inputs.triggerSource }}',
              testCaseId: '${{ github.event.inputs.testCaseId }}',
              testRunId: '${{ github.event.inputs.testRunId }}',
              timestamp: new Date().toISOString(),
              nativeGitHubData: {
                workflow: {
                  name: '${{ github.workflow }}',
                  runNumber: ${{ github.run_number }},
                  actor: '${{ github.actor }}'
                },
                job: {
                  status: '${{ job.status }}'
                },
                testStep: {
                  outcome: '${{ steps.tests.outcome }}',
                  conclusion: '${{ steps.tests.conclusion }}'
                }
              }
            };

            console.log('üì¶ Failure payload:', JSON.stringify(webhookPayload, null, 2));

            const res = await fetch(process.env.CALLBACK_URL, {
              method: 'POST',
              headers: { 
                'Content-Type': 'application/json',
                'Authorization': `Bearer ${process.env.YOUTRACK_TOKEN}`
              },
              body: JSON.stringify(webhookPayload)
            });
            
            if (res.ok) {
              console.log('‚úÖ TMS notified successfully');
            } else {
              console.error('‚ùå TMS notification failed:', res.status);
            }
        env:
          CALLBACK_URL: ${{ secrets.WEBHOOK_URL }}
          YOUTRACK_TOKEN: ${{ secrets.YOUTRACK_TOKEN }}
